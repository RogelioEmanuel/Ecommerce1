@model FertilizantesV1.Models.orden

@{
    ViewBag.Title = "Edit1";
    Layout = "~/Views/Shared/_LayoutEnviador.cshtml";
}
@{ 
    string val;
    if (Model.fecha_envio.HasValue)
    {
        val = Model.fecha_envio.GetValueOrDefault().ToShortDateString();
    }
    else
    {
        val = "";
    }
}
<div class="container" style="padding-top: 30px;">
    <h2 class="mb-2" style="color: #5cb874;">Actualizar fecha de entrega</h2>
</div>

<script>
    $(this).submit(function (event) {
        //prevenir el submit para hacer las validaciones
        event.preventDefault();
        var fE;
        var fN;
        var nada = "";
        var i = $('#@Html.IdFor(m => m.fecha_entrega)').val();

        if (i != "") {
            fT = i.split('-');
            fE = fT[2] + "/" + fT[1] + "/" + fT[0];
            var fechaEntrega = Date.parse(i);
            //alert("Fecha de entrega del date picker:" + i);
            //alert("Fecha de entrega en milisegundos:" + fechaEntrega);
        } else {
            nada = "nada";
            fE = "";
        }

        var fEnv = $('#@Html.IdFor(m => m.fecha_envio)').val();
        //alert("Fecha de envío del modelo:" + fEnv);
        fN = fEnv.split('/');
        if (nada == "nada") {
            $("#1").text("No se ha seleccionado ninguna fecha de Entrega");
            $('#popupModel').modal('show');
        } else {
            var fechaEnvio = Date.parse(fN[2] + '-' + fN[1] + '-' + fN[0]);
            //alert("Fecha de envío en milisegundos:" + fechaEnvio);

            if (fechaEnvio > fechaEntrega) {
                //alert("Error en fecha");
                $("#1").text("La fecha de entrega: " + fE + " no puede ser menor");
                $("#2").text(" a la de envío: " + fEnv);
                $("#popupModel").modal('show');
            }
            else {
                //alert("correcto")
                Save();
            }
        }

    });

    function Save() {
        // dado que en el formulario verifica que no se de ataque CSRF (Cross site request forgery)
        // hay qye silicitar un token valido al servidor y agregarlo junto con los datos del modelo
        var token = $("[name='__RequestVerificationToken']").val();

        var ordenModel = {
            Id_orden: $('#@Html.IdFor(m => m.id_orden)').val();
            fecha_creacion: $('#@Html.IdFor(m => m.fecha_creacion)').val();
            num_confirmacion: $('#@Html.IdFor(m => m.num_confirmacion)').val();
            Total: $('#@Html.IdFor(m => m.total)').val();
            id_cliente: $('#@Html.IdFor(m => m.id_cliente)').val();
            id_dirEntrega: $('#@Html.IdFor(m => m.id_dir_entrega)').val();
            id_paqueteria: $('#@Html.IdFor(m => m.id_paqueteria)').val();
            num_guia: $('#@Html.IdFor(m => m.num_guia)').val();
            fecha_envio: $('#@Html.IdFor(m => m.fecha_envio)').val();
            fecha_entrega: $('#@Html.IdFor(m => m.fecha_entrega)').val();
            cliente: $('#@Html.IdFor(m => m.cliente)').val();
            paqueteria: $('#@Html.IdFor(m => m.paqueteria)').val();
            orden_producto: $('#@Html.IdFor(m => m.orden_producto)').val();
            __RequestVerificationToken: token
        }
        //Solicitamos por ajax el post, pero para poder ir al listado nuevamente
        // se debe poner el async como falso para hacer que la llamada de ajax sea sincrona
        // y asu poder hacer el submit que se había desabilitado
        $.ajax({
            type: 'post',
            url: '/Orden/Edit1',
            data: ordenModel,
            async: false,
            datatype: "json",
            success: function (result) {
                //alert("Exito");
                $('form').attr("'action", 'Index1');
                $('form').submit();
            },
            error: function (err, result) {
                alert("No Valid Data" + err.responseText);
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container" style="margin-bottom: 50px;">
        <div class="form-horizontal">
            <h4 class="">Orden a Actualizar</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id_orden)

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.fecha_creacion, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase font-weight-bold" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.fecha_creacion, new { @class = "form-control", @Value = Model.fecha_creacion.ToShortDateString(), @readonly = "readonly" } )
                    @Html.ValidationMessageFor(model => model.fecha_creacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.num_confirmacion, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.num_confirmacion, new { @class = "form-control", @readonly = "readonly" } )
                    @Html.ValidationMessageFor(model => model.num_confirmacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.total, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.total, new { @class = "form-control", @readonly = "readonly" } )
                    @Html.ValidationMessageFor(model => model.total, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--<div class="form-group">
        @Html.LabelFor(model => model.id_cliente, "id_cliente", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
        <div class="col-md-10">
            @*Html.DropDownList("id_cliente", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.TextBoxFor(model => model.paqueteria.nombre, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.id_cliente, "", new { @class = "text-danger" })
        </div>
    </div>-->

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.cliente.nombre, "nom_cliente", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.cliente.nombre, new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.id_cliente, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.Label("Dirección de entrega", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    <div class="form-control" readonly>
                        @Html.DisplayFor(model => model.cliente.calle_t),
                        @Html.DisplayFor(model => model.cliente.colonia_t),
                        @Html.DisplayFor(model => model.cliente.estado_t),
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.id_paqueteria, "id_paqueteria", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.DropDownList("id_paqueteria", null, htmlAttributes: new { @class = "form-control" })
                    @*Html.TextBoxFor(model => model.id_paqueteria, new { @class = "form-control", @readonly = "readonly" })*@
                    @Html.ValidationMessageFor(model => model.id_paqueteria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.num_guia, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.num_guia, new { @class = "form-control", @readonly = "readonly" } )
                    @Html.ValidationMessageFor(model => model.num_guia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.fecha_envio, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.fecha_envio, new { @class = "form-control datepicker", @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.fecha_envio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.fecha_entrega, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.fecha_entrega, new { @type = "date", @class = "form-control datepicker", @required = "required" })
                    @Html.ValidationMessageFor(model => model.fecha_entrega, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input id="guardar" type="submit" value="Guardar" class="btn btn-success mt-3 visible-md-block w-100" />
                </div>
            </div>
            <div>
                @Html.ActionLink("Regresar", "Index1", new { }, new { @class = "btn btn-dark mt-3 d-block w-100" })
            </div>
        </div>
    </div>
}
<div id="popupModel" class="moal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Error en fecha</h3>
                <button type="button" class="close" data-dismiss="modal">X</button>
            </div>
            <div style="padding: 5px;">
                <div style="background-color: khaki; padding-left: 15px;">
                    <span id="1"></span>     <span id="2"></span>
                </div>
                <br />
            </div>
        </div>
    </div>
</div>