@model Fertitec.Models.Orden

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutEnvios.cshtml";

}
@{string val;
    if (Model.fecha_envio.HasValue)
    {
        val = Model.fecha_envio.GetValueOrDefault().ToShortTimeString();
    } else
    { val = ""; }
}
<div class="container" style="padding-top: 30px;">
    <h2 class="mb-2" style="color: #5cb874;">Actualizar fecha de entrega</h2>
</div>


<script>


    $(this).submit(function (event)){
        //prevenir el submit para hacer las validaciones
        event.preventDefault();
        var fE;
        var fN;
        var nada = "";
        var i = $(' #@Html.IdFor(m=>m.fecha_entrega)').val();

        if (i != "") {
            fT = i.split('-');
            fE = fT[2] + "/" + fT[1] + "/" + fT[0];

            var fechaEntrega = Date.parse(i);


        }
        else
        {
            nada = "nada";
            fE = "";
        }

        var fEnv = $('#@Html.IdFor(m=>m.fecha_envio)').val();

        fN = fEnv.split('/');
        if (nada == "nada") {
            $("#1").text("No ha seleccionado ninguna fecha de Entrega");
            $('#popupModel').modal('show');
        }
        else {
            var fechaEnvio = Date.parse(fN[2]) + '-' + fN[1] + '-' + fN[0]);

            if (fechaEnvio > fechaEntrega)
            {
                $("#1").text("La fecha de entrega: " + fE + " no puede ser menor");
                $("#2").text(" a la de envio: " + fEnv);
                $('#popupModel').modal('show');
            }
            else
            {
                Save();
            }
        }
    });

    function Save() {


        var token = $("[name='__RequestVerificationToken']").val();

        var ordenModel = {
            idOrden: $('#@Html.IdFor(m=>m.idOrden)').val(),
            fecha_creacion_: $('#@Html.IdFor(m=>m.fecha_creacion_)').val(),
            num_confirmacion: $('#@Html.IdFor(m=>m.num_confirmacion)').val(),
            Total: $('#@Html.IdFor(m=>m.Total)').val(),
            idCliente: $('#@Html.IdFor(m=>m.idCliente)').val(),
            id_dirEnt: $('#@Html.IdFor(m=>m.id_dirEnt)').val(),
            idPaqueteria: $('#@Html.IdFor(m=>m.idPaqueteria)').val(),
            num_guia: $('#@Html.IdFor(m=>m.num_guia)').val(),
            fecha_envio: $('#@Html.IdFor(m=>m.fecha_envio)').val(),
            fecha_entrega: $('#@Html.IdFor(m=>m.fecha_entrega)').val(),
            Clientes: $('#@Html.IdFor(m=>m.Clientes)').val(),
            Paqueterias: $('#@Html.IdFor(m=>m.Paqueterias)').val(),
            Orden_Producto: $('#@Html.IdFor(m=>m.Orden_Producto)').val(),
            __RequestVerificationToken: token
        }

        //solicitamos por ajax el post, pero para poder ir al listado nuevamente
        //se debe poner el async como falso para hacer que la llamada de ajax sea sincrona
        //y asi poder hacer el submit que se habia desabilitado
        $.ajax({
            type: "post",
            url: "/Orden/Edit1",
            data: ordenModel,
            async: false,
            datatype: "json",
            success: function (result) {

                $('form').attr('action', 'Index1');
                $('form').submit();
            },
            error: function (err, result) {
                alert('No Valid Data' + err.responseText);
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
 <div class="container" style="margin-bottom: 50px;">
     <div class="form-horizontal">
         <h4>Orden a Actualizar</h4>
         <hr />
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })
         @Html.HiddenFor(model => model.idOrden)

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.fecha_creacion_, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase font-weight-bold" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.fecha_creacion_, new { @class = "form-control", @Value = Model.fecha_creacion_.ToShortTimeString(), @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.fecha_creacion_, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.num_confirmacion, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.num_confirmacion, new { @class = "form-control", @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.num_confirmacion, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.Total, new { @class = "form-control", @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.Clientes.nombre, "nom_cliente", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.Clientes.nombre, new { @class = "form-control", @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.idCliente, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.Label("Dirección de entrega", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @*@Html.EditorFor(model => model.id_dirEnt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_dirEnt, "", new { @class = "text-danger" })*@
                 <div class="form-control" readonly>
                     @Html.DisplayFor(model => model.Clientes.calle),
                     @Html.DisplayFor(model => model.Clientes.colonia),
                     @Html.DisplayFor(model => model.Clientes.estado),
                 </div>
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.Paqueterias, "nom_paqueteria", htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.Paqueterias.nombre, new { @class = "form-control", @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.idPaqueteria, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.num_guia, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.num_guia, new { @class = "form-control", @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.num_guia, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.fecha_envio, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.fecha_envio, new { @class = "form-control datepicker", @Value = @val, @readonly = "readonly" })
                 @Html.ValidationMessageFor(model => model.fecha_envio, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group mb-3">
             @Html.LabelFor(model => model.fecha_entrega, htmlAttributes: new { @class = "control-label col-md-2 text-uppercase" })
             <div class="col-md-12">
                 @Html.TextBoxFor(model => model.fecha_entrega, new { @type = "date", @class = "form-control datepicker" })
                 @Html.ValidationMessageFor(model => model.fecha_entrega, "", new { @class = "text-danger" })
             </div>
         </div>

         <div class="form-group">
             <div class="col-md-offset-2 col-md-12">
                 @*<input type="submit" value="Save" class="btn btn-success" />*@
                 <input id="guardar" type="submit" value="Guardar" class="btn btn-success mt-3 visible-md-block w-100" />
             </div>
         </div>
         <div>
             @Html.ActionLink("Regresar", "Index1", new { }, new { @class = "btn btn-dark mt-3 d-block w-100" })
         </div>
     </div>
   </div>
}
<div id="popupModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Error en la fecha</h3>
                <button type="button" class="close" date-dismiss="modal">X</button>
            </div>
            <div style="padding:5px;">
                <div style="background-color:khaki;padding-left:15px">
                    <span id="1"></span> <span id="2"></span>
                </div>
                <br />
            </div>
        </div>
    </div>
</div>
